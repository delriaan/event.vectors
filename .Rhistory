View(inspect[["2"]])
inspect <- map(purrr::set_names(2:100), ~{
sample(
x = rownames(trans_matrix)
, size = .x
, replace = TRUE
, prob = rowMeans(trans_matrix)
) |>
purrr::reduce(~trans_matrix[.y, ] %*% trans_matrix) %>%
.[1, order(colnames(.))] %>%
t() |>
list() |>
setDT()
}) |> rbindlist()
View(inspect)
inspect <- map(purrr::set_names(2:100), ~{
sample(
x = rownames(trans_matrix)
, size = .x
, replace = TRUE
, prob = rowMeans(trans_matrix)
) |>
purrr::reduce(~trans_matrix[.y, ] %*% trans_matrix) %>%
.[1, order(colnames(.))] %>%
t() |>
list() |>
setDT() |>
.[, evt_idx := .x]
}) |> rbindlist()
View(inspect)
inspect <- map(purrr::set_names(2:100), ~{
sample(
x = rownames(trans_matrix)
, size = .x
, replace = TRUE
, prob = rowMeans(trans_matrix)
) |>
purrr::reduce(~trans_matrix[.y, ] %*% trans_matrix) %>%
.[1, order(colnames(.))] %>%
t() |>
list() |>
setDT() %>%
.[, evt_idx := .x]
}) |> rbindlist()
View(inspect)
library(plotly)
plot_ly(inspect, y = ~evt_idx[-1], z = rowDiffs(inspect[, !"from"] %>% as.matrix()))
plot_ly(
inspect
, y = ~evt_idx[-1]
, z = rowDiffs(inspect[, !"from"] %>% as.matrix())
, type = "contour"
)
plot_ly(
inspect
, x = inspect[, !"from"] %>% names()
, y = ~evt_idx[-1]
, z = rowDiffs(inspect[, !"from"] %>% as.matrix())
, type = "contour"
)
plot_ly(
inspect
, x = inspect[, !"evt_idx"] %>% names()
, y = ~evt_idx[-1]
, z = rowDiffs(inspect[, !"evt_idx"] %>% as.matrix())
, type = "contour"
)
inspect <- map(purrr::set_names(2:100), ~{
rep_int(1, .x) |>
purrr::reduce(~trans_matrix[.y, ] %*% trans_matrix) %>%
.[1, order(colnames(.))] %>%
t() |>
list() |>
setDT() %>%
.[, evt_idx := .x]
}) |> rbindlist()
inspect <- map(purrr::set_names(2:100), ~{
rep.in(1, .x) |>
purrr::reduce(~trans_matrix[.y, ] %*% trans_matrix) %>%
.[1, order(colnames(.))] %>%
t() |>
list() |>
setDT() %>%
.[, evt_idx := .x]
}) |> rbindlist()
inspect <- map(purrr::set_names(2:100), ~{
rep.int(1, .x) |>
purrr::reduce(~trans_matrix[.y, ] %*% trans_matrix) %>%
.[1, order(colnames(.))] %>%
t() |>
list() |>
setDT() %>%
.[, evt_idx := .x]
}) |> rbindlist()
inspect
2:100
inspect <- vector("list", 99L)
inspect <- trans_matrix[1, ];
inspect
walk(purrr::set_names(2:100), ~{
inspect <<- (inspect %*% trans_matrix) %>%
.[1, order(colnames(.))]
})
inspect
inspect <- trans_matrix[1, ];
walk(purrr::set_names(2:100), ~{
inspect <<- rbindind(inspect, {
(inspect %*% trans_matrix) %>%.[1, order(colnames(.))]
})
})
walk(purrr::set_names(2:100), ~{
inspect <<- rbind(inspect, {
(inspect %*% trans_matrix) %>%.[1, order(colnames(.))]
})
})
View(inspect)
inspect <- trans_matrix[1, ];
walk(purrr::set_names(2:100), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix) %>%
.[1, order(colnames(.))]
})
})
inspect <- as.matrix(trans_matrix);
walk(purrr::set_names(2:100), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix) %>%
.[1, order(colnames(.))]
})
})
View(inspect)
inspect[, order(colnames(inspect))]
inspect <- as.matrix(trans_matrix);
inspect <- as.matrix(trans_matrix[1, ]);
inspect <- as.matrix(trans_matrix[1, ]);
inspect <- as.matrix(trans_matrix[1, ]);
trans_matrix
inspect <- trans_matrix[1, ]
inspect <- trans_matrix["Src1", ]
inspect <- trans_matrix["Src1", ] %>% as.matrix()
inspect <- trans_matrix["Src1", ] %>% t() %>% as.matrix()
View(inspect)
walk(purrr::set_names(2:100), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix)
})
})
inspect[, order(colnames(inspect))]
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = rowDiffs(inspect[, order(colnames(inspect))])
, type = "contour"
)
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))])
, type = "contour"
)
rowDiffs(inspect[, order(colnames(inspect))])
inspect
inspect[1:10, ]
inspect[1:10, ] %>% rowDiffs()
inspect[1:10, ] %>% colDiffs()
inspect[1:10, ] %>% print() %>% colDiffs()
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))])
, type = "contour"
)
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))]) %>% round(4)
, type = "contour"
)
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))]) %>% round(6)
, type = "contour"
)
walk(purrr::set_names(2:30), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix)
})
})
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))]) %>% round(6)
, type = "contour"
)
inspect <- trans_matrix["Src1", ] %>% t() %>% as.matrix()
walk(purrr::set_names(2:30), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix)
})
})
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))]) %>% round(6)
, type = "contour"
)
inspect <- trans_matrix["Src1", ] %>% t() %>% as.matrix()
walk(purrr::set_names(2:30), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix)
})
})
plot_ly(
x =colnames(inspect[, order(colnames(inspect))])
, y = ~2:nrow(inspect)
, z = colDiffs(inspect[, order(colnames(inspect))]) %>% round(6)
, type = "contour"
)
inspect <- trans_matrix["Src1", ] %>% t() %>% as.matrix()
walk(purrr::set_names(2:30), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix)
})
})
inspect %<>% .[, order(colnames(.))]
plot_ly(
x =colnames(inspect)
, y = ~2:nrow(inspect)
, z = colDiffs(inspect) %>% round(6)
, type = "contour"
)
plot_ly(
x =colnames(inspect)
, y = ~2:nrow(inspect)
, z = inspect[-1, ] * (colDiffs(inspect) %>% round(4) != 0)
, type = "contour"
)
plot_ly(
x =colnames(inspect)
, y = ~2:nrow(inspect)
, z = inspect[-1, ] * all(colDiffs(inspect) %>% round(4) != 0)
, type = "contour"
)
plot_ly(
x =colnames(inspect)
, y = ~2:nrow(inspect)
, z = inspect[-1, ] * (colDiffs(inspect) %>% round(4) != 0)
, type = "contour"
)
inspect <- trans_matrix["Src1", ] %>% t() %>% as.matrix()
walk(purrr::set_names(1:30), ~{
inspect <<- rbind(inspect, {
(inspect[nrow(inspect), ] %*% trans_matrix)
})
})
inspect %<>% .[, order(colnames(.))]
plot_ly(
x =colnames(inspect)
, y = ~1:nrow(inspect)
, z = inspect[-1, ] * (colDiffs(inspect) %>% round(4) != 0)
, type = "contour"
)
inspect <- trans_matrix["Src1", ] %>% t() %>% as.matrix()
walk(purrr::set_names(1:30), ~{
inspect <<- rbind(inspect, (inspect[nrow(inspect), ] %*% trans_matrix))
})
inspect <- trans_matrix["Src2", ] %>% t() %>% as.matrix()
walk(purrr::set_names(1:30), ~{
inspect <<- rbind(inspect, (inspect[nrow(inspect), ] %*% trans_matrix))
})
inspect %<>% .[, order(colnames(.))]
plot_ly(
x =colnames(inspect)
, y = ~1:nrow(inspect)
, z = inspect[-1, ] * (colDiffs(inspect) %>% round(4) != 0)
, type = "contour"
)
inspect <- trans_matrix["Src3", ] %>% t() %>% as.matrix()
walk(purrr::set_names(1:30), ~{
inspect <<- rbind(inspect, (inspect[nrow(inspect), ] %*% trans_matrix))
})
inspect %<>% .[, order(colnames(.))]
plot_ly(
x =colnames(inspect)
, y = ~1:nrow(inspect)
, z = inspect[-1, ] * (colDiffs(inspect) %>% round(4) != 0)
, type = "contour"
)
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
)
})
subplot(markov_viz, nrows = length(markov_viz))
rlang::inject(subplot(!!!markov_viz, nrows = length(markov_viz)))
markov_viz$Src1
split(trans_matrix, f = rownames(trans_matrix))
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
)
})
markov_viz$Src1
markov_viz
split(trans_matrix, f = rownames(trans_matrix))
rm(f, from, to)
rm(inspect)
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>%
plotly::layout(title = .y) %T>% print()
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>% print()
# plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))] %>% print()
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>%
plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
print(out)
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>%
plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
map(~{
cat(.y)
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
print(out)
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>%
plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
imap(~{
cat(.y)
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>%
plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
imap(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
) %>%
plotly::layout(title = .y)
})
rlang::inject(subplot(!!!markov_viz, nrows = length(markov_viz)))
rlang::inject(subplot(!!!markov_viz, nrows = 3))
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
imap(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = colnames(out)
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
, name = .y
) %>%
plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
imap(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = sprintf("From %s: To ", .y, colnames(out))
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
, name = .y
) %>%
plotly::layout(title = .y)
})
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
imap(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = sprintf("From %s: To %s", .y, colnames(out))
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
, name = .y
) %>%
plotly::layout(title = .y)
})
rlang::inject(subplot(!!!markov_viz, nrows = 3, ))
markov_viz <- split(trans_matrix, f = rownames(trans_matrix)) %>%
imap(~{
out = t(.x) %>% as.matrix()
walk(purrr::set_names(1:30), ~{
out <<- rbind(out, (out[nrow(out), ] %*% trans_matrix))
})
out %<>% .[, order(colnames(.))]
plot_ly(
x = sprintf("From %s: To %s", .y, colnames(out))
, y = ~1:nrow(out)
, z = out[-1, ] * (colDiffs(out) %>% round(4) != 0)
, type = "contour"
, name = .y
) %>%
plotly::layout(title = .y)
})
markov_viz
rlang::inject(subplot(!!!markov_viz, nrows = 3))
rlang::inject(subplot(!!!markov_viz, nrows = 3)) %>%
plotly::layout(title = "Steady-State vs Initial Source")
rlang::inject(subplot(!!!markov_viz, nrows = 3)) %>%
plotly::layout(
title = "Steady-State vs Initial Source"
, margin = list(t = -.5)
)
library(EVSpace)
