igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))])
list(from, to)
})
})
View(inspect)
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))])
eval(from)[, src := .x][eval(to)[, src := .y], allow.cartesian = TRUE]
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |> eval()
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |> eval()
from[, src := .x][to[, src := .y], allow.cartesian = TRUE]
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |> eval()
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |> eval()
from[to]
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |> eval()
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |> eval()
# eval(from)[, src := .x][eval(to)[, src := .y], allow.cartesian = TRUE]
list(from = from, to = to)
})
})
View(inspect)
View(inspect[[1]][["from"]])
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][eval(to)[, src := .y], allow.cartesian = TRUE]
# list(from = from, to = to)
})
})
View(inspect)
View(inspect[[6]])
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][eval(to)[, src := .y], allow.cartesian = TRUE][, EVSpace::cross.time(.SD[[2]], .SD[[4]], .SD[[3]], .SD[[5]])]
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
][, EVSpace::cross.time(.SD[[2]], .SD[[4]], .SD[[3]], .SD[[5]])]
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
][, EVSpace::cross.time(date_start, i.date_start, date_end, i.date_end)]
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
]#[, EVSpace::cross.time(date_start, i.date_start, date_end, i.date_end)]
# list(from = from, to = to)
})
})
View(inspect)
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
][, EVSpace::cross.time(.SD[, c(2)], .SD[, c(5)], .SD[, c(3)], .SD[, c(6)])]
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
][, EVSpace::cross.time(.SD[[2]], .SD[[5]], .SD[[3]], .SD[[6]])]
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
][, c(.SD[[2]], .SD[[5]], .SD[[3]], .SD[[6]])]
# list(from = from, to = to)
})
})
View(inspect)
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
] |>
purrr::as_mapper(~EVSpace::cross.time(s0 = ..2, s1 = ..5, e0 = ..3, e1 = ..6))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
] |>
(purrr::as_mapper(~EVSpace::cross.time(s0 = ..2, s1 = ..5, e0 = ..3, e1 = ..6)))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,3,5,6), as.Date)
] %>%
(purrr::as_mapper(~EVSpace::cross.time(s0 = ..2, s1 = ..5, e0 = ..3, e1 = ..6)))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,5,3,6), as.Date)
] %>%
(purrr::as_mapper(~EVSpace::cross.time(s0 = ..1, s1 = ..2, e0 = ..3, e1 = ..4)))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,5,3,6), as.Date)
]
# (purrr::as_mapper(~EVSpace::cross.time(s0 = ..1, s1 = ..2, e0 = ..3, e1 = ..4)))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][
, modify_at(.SD, c(2,5,3,6), as.Date)
] %>% as.list() %>%
(purrr::as_mapper(~EVSpace::cross.time(s0 = ..2, s1 = ..5, e0 = ..3, e1 = ..6)))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
data <- eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][, modify_at(.SD, c(2,5,3,6), as.Date)]
EVSpace::cross.time(s0 = data[[2]], s1 = data[[5]], e0 = data[[3]], e1 = data[[6]]))
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
data <- eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][, modify_at(.SD, c(2,5,3,6), as.Date)]
EVSpace::cross.time(s0 = data[[2]], s1 = data[[5]], e0 = data[[3]], e1 = data[[6]])
# list(from = from, to = to)
})
})
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
data <- eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][, modify_at(.SD, c(2,5,3,6), as.Date)]
print(str(data))
EVSpace::cross.time(s0 = data[[2]], s1 = data[[5]], e0 = data[[3]], e1 = data[[6]])
# list(from = from, to = to)
})
})
library(data.table)
#
inspect <- local({
g <- self$q_graph$`48`
# igraph::adjacent_vertices(g)
igraph::ends(g, es = igraph::E(g)) |>
data.table::as.data.table() |>
purrr::pmap(~{
f_event = igraph::V(g)[name == .x]$data[[1]]
t_event = igraph::V(g)[name == .y]$data[[1]]
from	= rlang::expr(f_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(f_event$event$jk),!!rlang::quo_get_expr(f_event$event$time_start_idx), !!rlang::quo_get_expr(f_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
to		= rlang::expr(t_event %$% eval(action) %>%
.[, .(!!rlang::quo_get_expr(t_event$event$jk),!!rlang::quo_get_expr(t_event$event$time_start_idx), !!rlang::quo_get_expr(t_event$event$time_end_idx))]) |>
eval() %>% data.table::setkeyv(names(.)[1])
data <- eval(from)[, src := .x][
eval(to)[, src := .y]
, allow.cartesian = TRUE
][, modify_at(.SD, c(2,5,3,6), as.Date)]
print(str(data))
library(data.table)
EVSpace::cross.time(s0 = data[[2]], s1 = data[[5]], e0 = data[[3]], e1 = data[[6]])
# list(from = from, to = to)
})
})
