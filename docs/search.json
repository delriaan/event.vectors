[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chionesu George. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"George C (2023). event.vectors: Event Vectors. R package version 1.6.0.","code":"@Manual{,   title = {event.vectors: Event Vectors},   author = {Chionesu George},   year = {2023},   note = {R package version 1.6.0}, }"},{"path":"/index.html","id":"event-vectors","dir":"","previous_headings":"","what":"Event Vectors","title":"Event Vectors","text":"event.vectors R6 class object represents relations among duration events. Moving one event another creates vector space consisting relative ordering among start, end, overlap, span: $$ \\vec{e} := \\begin{bmatrix} E_{0,s} & E_{0,e} \\\\ E_{1,s} & E_{1,e} \\end{bmatrix} $$ ϵ⃗ vector complex plane describing relationship (coordinates) events. defined interpreted follows: $=0 \\enspace \\iff x = 1$ $\\ne 0 \\enspace \\iff x\\ne 0$","code":""},{"path":"/reference/cross.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-Compare Temporal Boundaries — cross.time","title":"Cross-Compare Temporal Boundaries — cross.time","text":"Given four-element vector start end coordinates two events, cross.time() compares distances among upper lower boundaries pairs event vectors. includes \"like\" boundary comparison (e.g., start #2 - start#1) contrary boundary comparison (e.g. start #2 - end #1).","code":""},{"path":"/reference/cross.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Compare Temporal Boundaries — cross.time","text":"","code":"cross.time(   s0,   s1,   e0,   e1,   control = list(-Inf, Inf),   chatty = FALSE,   unit = \"\",   ... )"},{"path":"/reference/cross.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Compare Temporal Boundaries — cross.time","text":"s0 numeric/date-coded vector containing temporal lower boundary starting event duration s1 numeric/date-coded vector containing temporal upper boundary starting event duration e0 numeric/date-coded vector containing temporal lower boundary ending event duration e1 numeric/date-coded vector containing temporal upper boundary ending event duration control length-2 sorted list values indicating range allowable values internal variable beta (difference ends '' events beginnings '' events) chatty (logical | FALSE) Verbosity flag unit Conversion temporal units compatible lubridate ... (used)","code":""},{"path":"/reference/cross.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-Compare Temporal Boundaries — cross.time","text":"data.table object following fields: mGap: Metric describing difference following temporal boundaries: .start, .end mSt: Metric describing difference following temporal boundaries: .start, .start mEd: Metrics describing difference following temporal boundaries: .end, .end .len: duration time \"\" event: units one scale smallest increment time represented (e.g., calendar dates days lengths expressed days) .len: duration time \"\" event: units one scale smallest increment time represented (e.g., calendar dates days lengths expressed days) epsilon: complex number (e.g., 1337 + 0.90210i) describing relational changes one event another interpretation based whether real imaginary parts > 0, < 0,  == 0: epsilon.desc: plain-language description epsilon","code":""},{"path":"/reference/event.vector.space.html","id":null,"dir":"Reference","previous_headings":"","what":"Relational Temporal Vector Space — event.vector.space","title":"Relational Temporal Vector Space — event.vector.space","text":"`event.vector.space` R6 class object creates temporally-compared space \"event vectors\", comprised '' '' date. time events focus derivation: properly, event vector complex number encodes relationship boundaries events, thus allowing one describe relationship concise manner.","code":""},{"path":"/reference/event.vector.space.html","id":"execution-workflow","dir":"Reference","previous_headings":"","what":"Execution Workflow","title":"Relational Temporal Vector Space — event.vector.space","text":"initial execution order look something like following ...  event.vector.space$new(...)$configure(...)$set.data(...)$set.q_graphs(...) %>% make.evs_universe(...) .  ability execute preceding workflow order exists, best adhere provided flow first time around.","code":""},{"path":"/reference/event.vector.space.html","id":"class-member-space-","dir":"Reference","previous_headings":"","what":"Class Member \"Space\"","title":"Relational Temporal Vector Space — event.vector.space","text":"$space data.table populated upon execution make.evs_universe(): jk Values \"join key\" \"crossed\" time output See cross.time() fr_*, to_* temporal ranges /toevent src.pair Values \"-\" pairings events given contexts provided: :.coord String representation temporal boundaries expressed concatenated integers .coord String representation temporal boundaries expressed concatenated integers","code":""},{"path":"/reference/event.vector.space.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Relational Temporal Vector Space — event.vector.space","text":"space object containing derived set data (see 'Details') q_graph 'query graph' list containing event interactions level 'jk' (see 'Details') evt_graphs Event graphs level 'jk' (see 'Details') Initialize Vector Space","code":""},{"path":"/reference/event.vector.space.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Relational Temporal Vector Space — event.vector.space","text":"config active binding returns configuration used instantiate class.","code":""},{"path":[]},{"path":"/reference/event.vector.space.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Relational Temporal Vector Space — event.vector.space","text":"event.vector.space$new() event.vector.space$configure() event.vector.space$set.data() event.vector.space$set.q_graphs() event.vector.space$clone()","code":""},{"path":[]},{"path":"/reference/event.vector.space.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational Temporal Vector Space — event.vector.space","text":"","code":"event.vector.space$new(config = NULL, ...)"},{"path":"/reference/event.vector.space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational Temporal Vector Space — event.vector.space","text":"config (see class method $configure()) ... (used) events.ascending TRUE, final output contain chronological events.","code":""},{"path":"/reference/event.vector.space.html","id":"method-configure-","dir":"Reference","previous_headings":"","what":"Method configure()","title":"Relational Temporal Vector Space — event.vector.space","text":"Configuration achieved via object passed config used initialization method: former method used, object must data.frame, data.table, list(-like) following columns: src.names, contexts, map.fields, row.filters. important set configuration data.frame correctly ensuring elements row related dataset; otherwise, wrong filter may attempted applied non-existent column. using method, fields available arguments additional arguments src.mix exclude.mix can used override default behavior class method $evs.universe() cross-compares sources.","code":""},{"path":"/reference/event.vector.space.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational Temporal Vector Space — event.vector.space","text":"","code":"event.vector.space$configure(   src.names,   contexts,   map.fields,   row.filters,   src.mix = \"comb\",   exclude.mix = list(c(\"\", \"\")),   update = FALSE,   chatty = FALSE )"},{"path":"/reference/event.vector.space.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational Temporal Vector Space — event.vector.space","text":"src.names atomic vector strings containing R workspace names source datasets given \"ENVIRONMENT$object\" \"object\" format contexts atomic vector strings serving labels data source map.fields One two forms supported: atomic vector delimited strings, string indicating columns serve join-key (jk), lower boundary (time_start_idx) upper boundary (time_end_idx) order list length-three array strings following ordering rule stated row.filters One two forms supported: atomic vector strings, element used filter corresponding dataset processing.  string contain logical statement predicates \\((\\le b) | ((+ 10) \\ge k[1])\\) expression list similar construction src.mix \"combination\": default: generates unique pairs sources \"reflexive\": Compares source \"\": union preceding options Partial matching allowed, generated combinations include mirror (e.g., \", B\" \"B, \" combo pair generated). exclude.mix list vectors containing source pair context exclude (e.g. list(c(\"\", \"C\"), c(\"u\", \"k\"))). evs_exclude.blender can invoked create list quickly.  Combinations automatically mirrored case 'src.mix'. update (logical) TRUE results appending existing configuration chatty (logical | FALSE) Verbosity flag","code":""},{"path":"/reference/event.vector.space.html","id":"method-set-data-","dir":"Reference","previous_headings":"","what":"Method set.data()","title":"Relational Temporal Vector Space — event.vector.space","text":"set.data() adds column src objects referenced configuration argument","code":""},{"path":"/reference/event.vector.space.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational Temporal Vector Space — event.vector.space","text":"","code":"event.vector.space$set.data(chatty = FALSE)"},{"path":"/reference/event.vector.space.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational Temporal Vector Space — event.vector.space","text":"chatty (logical | FALSE) Verbosity flag","code":""},{"path":"/reference/event.vector.space.html","id":"method-set-q-graphs-","dir":"Reference","previous_headings":"","what":"Method set.q_graphs()","title":"Relational Temporal Vector Space — event.vector.space","text":"set.q_graphs() creates list 'query graphs' unique value 'jk'.  list stored class member q_graph","code":""},{"path":"/reference/event.vector.space.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational Temporal Vector Space — event.vector.space","text":"","code":"event.vector.space$set.q_graphs(chatty = FALSE)"},{"path":"/reference/event.vector.space.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational Temporal Vector Space — event.vector.space","text":"chatty (logical | FALSE) Verbosity flag","code":""},{"path":"/reference/event.vector.space.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Relational Temporal Vector Space — event.vector.space","text":"objects class cloneable method.","code":""},{"path":"/reference/event.vector.space.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Relational Temporal Vector Space — event.vector.space","text":"","code":"event.vector.space$clone(deep = FALSE)"},{"path":"/reference/event.vector.space.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relational Temporal Vector Space — event.vector.space","text":"deep Whether make deep clone.","code":""},{"path":"/reference/event.vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Event Vectors — event.vectors","title":"Event Vectors — event.vectors","text":"event.vectors R6 class object creates temporally-compared space \"event vectors\", comprised '' '' temporal marker. time events focus derivation: properly, event vector complex number encodes relationship boundaries events, thus allowing one describe relationship concise manner.","code":""},{"path":"/reference/event.vectors.html","id":"execution-workflow","dir":"Reference","previous_headings":"","what":"Execution Workflow","title":"Event Vectors — event.vectors","text":"initial execution order look something like following ...  event.vectors$new(...)$configure(...)$make.evs_universe(...) .  ability execute preceding workflow order exists, best adhere provided flow first time around.","code":""},{"path":"/reference/event.vectors.html","id":"class-member-space-","dir":"Reference","previous_headings":"","what":"Class Member \"Space\"","title":"Event Vectors — event.vectors","text":"$space data.table populated upon execution $make.evs_universe(): jk Values \"join key\" \"crossed\" time output See cross.time() fr_*, to_* temporal ranges /toevent src.pair Values \"-\" pairings events given contexts provided: :.coord String representation temporal boundaries expressed concatenated integers .coord String representation temporal boundaries expressed concatenated integers","code":""},{"path":"/reference/event.vectors.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Event Vectors — event.vectors","text":"space object containing derived set data (see 'Details') q_graph 'query graph' list containing event interactions level 'jk' (see 'Details') evt_graphs Event graphs level 'jk' (see 'Details') Initialize Event Vector Class","code":""},{"path":"/reference/event.vectors.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Event Vectors — event.vectors","text":"config active binding returns configuration used instantiate class.","code":""},{"path":[]},{"path":"/reference/event.vectors.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Event Vectors — event.vectors","text":"event.vectors$new() event.vectors$configure() event.vectors$make.evs_universe() event.vectors$clone()","code":""},{"path":[]},{"path":"/reference/event.vectors.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Vectors — event.vectors","text":"","code":"event.vectors$new(...)"},{"path":"/reference/event.vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Vectors — event.vectors","text":"... (used)","code":""},{"path":"/reference/event.vectors.html","id":"method-configure-","dir":"Reference","previous_headings":"","what":"Method configure()","title":"Event Vectors — event.vectors","text":"$configure() creates references source data use.","code":""},{"path":"/reference/event.vectors.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Vectors — event.vectors","text":"","code":"event.vectors$configure(   src.defs,   contexts,   map.fields = NULL,   src.mix = \"comb\",   exclude.mix = NULL,   chatty = FALSE )"},{"path":"/reference/event.vectors.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Vectors — event.vectors","text":"src.defs Strings expressions define data use (must return data.frame, data.table, list) contexts atomic vector strings serving labels data source map.fields list column name vectors definition src.defs providing data join key (jk), start (time_start_idx), end (time_end_idx) references. Provide names elements vector specify data source field mapped name (jk, time_start_idx, time_end_idx). src.mix \"combination\": default: generates unique pairs sources \"reflexive\": Compares source \"\": union preceding options Partial matching allowed, generated combinations include mirror (e.g., \", B\" \"B, \" combo pair generated). exclude.mix list vectors containing source pair context exclude (e.g. list(c(\"\", \"C\"), c(\"u\", \"k\"))). evs_exclude.blender can invoked create list quickly.  Combinations automatically mirrored case src.mix. chatty (logical | FALSE) Verbosity flag","code":""},{"path":"/reference/event.vectors.html","id":"method-make-evs-universe-","dir":"Reference","previous_headings":"","what":"Method make.evs_universe()","title":"Event Vectors — event.vectors","text":"make.evs_universe supplies values two class fields: q_graph space, latter created former. Additional Information: Class member $space many rows sum edge counts graphs $q_graph graphs class member $evt_graphs visIgraph-ready Parallelism internally supported via package furrr: user responsible setting appropriate plan","code":""},{"path":"/reference/event.vectors.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Vectors — event.vectors","text":"","code":"event.vectors$make.evs_universe(   ...,   time.control = list(-Inf, Inf),   graph.control = NULL,   unit = \"\",   furrr_opts = furrr::furrr_options(scheduling = Inf, seed = TRUE),   graph.only = FALSE,   chatty = FALSE )"},{"path":"/reference/event.vectors.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Vectors — event.vectors","text":"... (dots_list) Logical expression retain graph edges meeting conditions time.control 2-element list containing minimum maximum values allowed total temporal span two events graph.control expression list containing igraph-package calls manipulate internally-created graph order provided.  Use symbol g generically denote graph unit (See cross.time) furrr_opts furrr_options defaulted scheduling = Inf seed = TRUE: internal globals also set appended values provided graph.(logical | FALSE) TRUE assumes class member $space exists (possibly external modification) recreates member $evt_graphs chatty (logical | FALSE) Verbosity flag","code":""},{"path":"/reference/event.vectors.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Event Vectors — event.vectors","text":"Invisibly, original object augmented new member space","code":""},{"path":"/reference/event.vectors.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Event Vectors — event.vectors","text":"objects class cloneable method.","code":""},{"path":"/reference/event.vectors.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Event Vectors — event.vectors","text":"","code":"event.vectors$clone(deep = FALSE)"},{"path":"/reference/event.vectors.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Event Vectors — event.vectors","text":"deep Whether make deep clone.","code":""},{"path":"/reference/evs_exclude.blender.html","id":null,"dir":"Reference","previous_headings":"","what":"EVSpace Event-Pair Exclusions — evs_exclude.blender","title":"EVSpace Event-Pair Exclusions — evs_exclude.blender","text":"evs_exclude.blender wrapper expand.grid post-processing via data.table map","code":""},{"path":"/reference/evs_exclude.blender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EVSpace Event-Pair Exclusions — evs_exclude.blender","text":"","code":"evs_exclude.blender(x, y)"},{"path":"/reference/evs_exclude.blender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EVSpace Event-Pair Exclusions — evs_exclude.blender","text":"x See expand.grid y See expand.grid","code":""},{"path":"/reference/evs_exclude.blender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EVSpace Event-Pair Exclusions — evs_exclude.blender","text":"vector pairs event labels excluded call $exclude.mix()","code":""},{"path":"/reference/evs_retrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrace Event Source Data — evs_retrace","title":"Retrace Event Source Data — evs_retrace","text":"evs_retrace creates vertex attribute trace populates expression retrieves source record evaluated.","code":""},{"path":"/reference/evs_retrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrace Event Source Data — evs_retrace","text":"","code":"evs_retrace(self, ...)"},{"path":"/reference/evs_retrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrace Event Source Data — evs_retrace","text":"self R object class \"event.vector.space\" ... (dots_list) Names event graphs found self$evt_graphs","code":""},{"path":"/reference/evs_retrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrace Event Source Data — evs_retrace","text":"reference semantics R6 classes, name given ..., graph updates place: self returned invisibly.","code":""},{"path":"/reference/make.evs_universe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Event Vector Universe — make.evs_universe","title":"Create the Event Vector Universe — make.evs_universe","text":"make.evs_universe supplies values two class fields: q_graph space, latter created former.","code":""},{"path":"/reference/make.evs_universe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Event Vector Universe — make.evs_universe","text":"","code":"make.evs_universe(   self,   ...,   time.control = list(-Inf, Inf),   graph.control = NULL,   furrr_opts = furrr::furrr_options(scheduling = Inf, seed = TRUE),   graph.only = FALSE,   chatty = FALSE )"},{"path":"/reference/make.evs_universe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Event Vector Universe — make.evs_universe","text":"... (dots_list) Logical expression retain graph edges meeting conditions time.control 2-element list containing minimum maximum values allowed total temporal span two events graph.control expression list containing igraph-package calls manipulate internally-created graph order provided.  Use symbol g generically denote graph furrr_opts furrr_options defaulted scheduling = Inf seed = TRUE: internal globals also set appended values provided graph.(logical | FALSE) TRUE assumes class member $space exists (possibly external modification) recreates member $evt_graphs chatty (logical | FALSE) Verbosity flag evs EVSpace object","code":""},{"path":"/reference/make.evs_universe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Event Vector Universe — make.evs_universe","text":"Invisibly, original object augmented new member space","code":""},{"path":"/reference/make.evs_universe.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Create the Event Vector Universe — make.evs_universe","text":"Class member $space many rows sum edge counts graphs $q_graph graphs class member $evt_graphs visIgraph-ready Parallelism internally supported via package furrr: user responsible setting appropriate plan","code":""},{"path":"/reference/melt_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Time Melter — melt_time","title":"Multiple Time Melter — melt_time","text":"melt_time leverages data.table::melt transform input's temporal feature vector pair features indicating temporal duration (.e., start & stop).  handles feature vectors length.  \"Point--time\" columns duplicated melting","code":""},{"path":"/reference/melt_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Time Melter — melt_time","text":"","code":"melt_time(x, start.names, end.names, ...)"},{"path":"/reference/melt_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Time Melter — melt_time","text":"x (object) data.frame, data.table, coercible data.table start.names (string vector) names \"start\" columns: parsed given delimited string pattern \"[,;|][ ]?\" end.names (start.names) ... (string list) Optional column names \"point--time\" columns.","code":""},{"path":"/reference/melt_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Time Melter — melt_time","text":"\"melted\" data.table temporal feature vector containing start_date end_date","code":""}]
